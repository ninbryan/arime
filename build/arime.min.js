var arime=function(modules){function __webpack_require__(moduleId){if(installedModules[moduleId])return installedModules[moduleId].exports;var module=installedModules[moduleId]={exports:{},id:moduleId,loaded:!1};return modules[moduleId].call(module.exports,module,module.exports,__webpack_require__),module.loaded=!0,module.exports}var installedModules={};return __webpack_require__.m=modules,__webpack_require__.c=installedModules,__webpack_require__.p="",__webpack_require__(0)}([function(module,exports,__webpack_require__){function add(aNum,bNum){return"add"}function subtract(){return"subtract"}function multiply(){return"multiply"}function divide(){return"divide"}function chain(){return"chain"}__webpack_require__(1),__webpack_require__(2);module.exports=Object.create({add:add,subtract:subtract,multiply:multiply,divide:divide,chain:chain,toString:function(){return"arime: an <b>ari</b>th<b>me</b>tic library"}})},function(module,exports){for(var ret={},plus="+",minus="-",x=0;10>x;x++){ret[x]={},ret[x][plus]={},ret[x][minus]={};for(var y=0;10>y;y++)ret[x][plus][y]=x+y,ret[x][minus][y]=x-y}module.exports=ret},function(module,exports){var ArrayProto=Array.prototype;module.exports={map:ArrayProto.map.bind(ArrayProto),each:ArrayProto.forEach.bind(ArrayProto),makeArray:function(arg){return Array.isArray(arg)?arg:null!==arg&&void 0!==arg?[arg]:[]}}}]);